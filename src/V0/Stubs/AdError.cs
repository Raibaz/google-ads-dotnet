// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v0/errors/ad_error.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V0.Errors {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v0/errors/ad_error.proto</summary>
  public static partial class AdErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v0/errors/ad_error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvYWRzL2dvb2dsZWFkcy92MC9lcnJvcnMvYWRfZXJyb3IucHJv",
            "dG8SHmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmVycm9ycxocZ29vZ2xlL2Fw",
            "aS9hbm5vdGF0aW9ucy5wcm90byLKIAoLQWRFcnJvckVudW0iuiAKB0FkRXJy",
            "b3ISDwoLVU5TUEVDSUZJRUQQABILCgdVTktOT1dOEAESLAooQURfQ1VTVE9N",
            "SVpFUlNfTk9UX1NVUFBPUlRFRF9GT1JfQURfVFlQRRACEhoKFkFQUFJPWElN",
            "QVRFTFlfVE9PX0xPTkcQAxIbChdBUFBST1hJTUFURUxZX1RPT19TSE9SVBAE",
            "Eg8KC0JBRF9TTklQUEVUEAUSFAoQQ0FOTk9UX01PRElGWV9BRBAGEicKI0NB",
            "Tk5PVF9TRVRfQlVTSU5FU1NfTkFNRV9JRl9VUkxfU0VUEAcSFAoQQ0FOTk9U",
            "X1NFVF9GSUVMRBAIEioKJkNBTk5PVF9TRVRfRklFTERfV0lUSF9PUklHSU5f",
            "QURfSURfU0VUEAkSLworQ0FOTk9UX1NFVF9GSUVMRF9XSVRIX0FEX0lEX1NF",
            "VF9GT1JfU0hBUklORxAKEikKJUNBTk5PVF9TRVRfQUxMT1dfRkxFWElCTEVf",
            "Q09MT1JfRkFMU0UQCxI3CjNDQU5OT1RfU0VUX0NPTE9SX0NPTlRST0xfV0hF",
            "Tl9OQVRJVkVfRk9STUFUX1NFVFRJTkcQDBISCg5DQU5OT1RfU0VUX1VSTBAN",
            "EiEKHUNBTk5PVF9TRVRfV0lUSE9VVF9GSU5BTF9VUkxTEA4SHgoaQ0FOTk9U",
            "X1NFVF9XSVRIX0ZJTkFMX1VSTFMQDxIpCiVDQU5OT1RfU0VUX1dJVEhfVFJB",
            "Q0tJTkdfVVJMX1RFTVBMQVRFEBASHAoYQ0FOTk9UX1NFVF9XSVRIX1VSTF9E",
            "QVRBEBESJwojQ0FOTk9UX1VTRV9BRF9TVUJDTEFTU19GT1JfT1BFUkFUT1IQ",
            "EhIjCh9DVVNUT01FUl9OT1RfQVBQUk9WRURfTU9CSUxFQURTEBMSKAokQ1VT",
            "VE9NRVJfTk9UX0FQUFJPVkVEX1RISVJEUEFSVFlfQURTEBQSMQotQ1VTVE9N",
            "RVJfTk9UX0FQUFJPVkVEX1RISVJEUEFSVFlfUkVESVJFQ1RfQURTEBUSGQoV",
            "Q1VTVE9NRVJfTk9UX0VMSUdJQkxFEBYSMQotQ1VTVE9NRVJfTk9UX0VMSUdJ",
            "QkxFX0ZPUl9VUERBVElOR19CRUFDT05fVVJMEBcSHgoaRElNRU5TSU9OX0FM",
            "UkVBRFlfSU5fVU5JT04QGBIZChVESU1FTlNJT05fTVVTVF9CRV9TRVQQGRIa",
            "ChZESU1FTlNJT05fTk9UX0lOX1VOSU9OEBoSIwofRElTUExBWV9VUkxfQ0FO",
            "Tk9UX0JFX1NQRUNJRklFRBAbEiAKHERPTUVTVElDX1BIT05FX05VTUJFUl9G",
            "T1JNQVQQHBIaChZFTUVSR0VOQ1lfUEhPTkVfTlVNQkVSEB0SDwoLRU1QVFlf",
            "RklFTEQQHhIwCixGRUVEX0FUVFJJQlVURV9NVVNUX0hBVkVfTUFQUElOR19G",
            "T1JfVFlQRV9JRBAfEigKJEZFRURfQVRUUklCVVRFX01BUFBJTkdfVFlQRV9N",
            "SVNNQVRDSBAgEiEKHUlMTEVHQUxfQURfQ1VTVE9NSVpFUl9UQUdfVVNFECES",
            "EwoPSUxMRUdBTF9UQUdfVVNFECISGwoXSU5DT05TSVNURU5UX0RJTUVOU0lP",
            "TlMQIxIpCiVJTkNPTlNJU1RFTlRfU1RBVFVTX0lOX1RFTVBMQVRFX1VOSU9O",
            "ECQSFAoQSU5DT1JSRUNUX0xFTkdUSBAlEhoKFklORUxJR0lCTEVfRk9SX1VQ",
            "R1JBREUQJhImCiJJTlZBTElEX0FEX0FERFJFU1NfQ0FNUEFJR05fVEFSR0VU",
            "ECcSEwoPSU5WQUxJRF9BRF9UWVBFECgSJwojSU5WQUxJRF9BVFRSSUJVVEVT",
            "X0ZPUl9NT0JJTEVfSU1BR0UQKRImCiJJTlZBTElEX0FUVFJJQlVURVNfRk9S",
            "X01PQklMRV9URVhUECoSHwobSU5WQUxJRF9DQUxMX1RPX0FDVElPTl9URVhU",
            "ECsSHQoZSU5WQUxJRF9DSEFSQUNURVJfRk9SX1VSTBAsEhgKFElOVkFMSURf",
            "Q09VTlRSWV9DT0RFEC0SFwoTSU5WQUxJRF9EU0FfVVJMX1RBRxAuEioKJklO",
            "VkFMSURfRVhQQU5ERURfRFlOQU1JQ19TRUFSQ0hfQURfVEFHEC8SEQoNSU5W",
            "QUxJRF9JTlBVVBAwEhsKF0lOVkFMSURfTUFSS1VQX0xBTkdVQUdFEDESGgoW",
            "SU5WQUxJRF9NT0JJTEVfQ0FSUklFUhAyEiEKHUlOVkFMSURfTU9CSUxFX0NB",
            "UlJJRVJfVEFSR0VUEDMSHgoaSU5WQUxJRF9OVU1CRVJfT0ZfRUxFTUVOVFMQ",
            "NBIfChtJTlZBTElEX1BIT05FX05VTUJFUl9GT1JNQVQQNRIxCi1JTlZBTElE",
            "X1JJQ0hfTUVESUFfQ0VSVElGSUVEX1ZFTkRPUl9GT1JNQVRfSUQQNhIZChVJ",
            "TlZBTElEX1RFTVBMQVRFX0RBVEEQNxInCiNJTlZBTElEX1RFTVBMQVRFX0VM",
            "RU1FTlRfRklFTERfVFlQRRA4EhcKE0lOVkFMSURfVEVNUExBVEVfSUQQORIR",
            "Cg1MSU5FX1RPT19XSURFEDoSIQodTUlTU0lOR19BRF9DVVNUT01JWkVSX01B",
            "UFBJTkcQOxIdChlNSVNTSU5HX0FERFJFU1NfQ09NUE9ORU5UEDwSHgoaTUlT",
            "U0lOR19BRFZFUlRJU0VNRU5UX05BTUUQPRIZChVNSVNTSU5HX0JVU0lORVNT",
            "X05BTUUQPhIYChRNSVNTSU5HX0RFU0NSSVBUSU9OMRA/EhgKFE1JU1NJTkdf",
            "REVTQ1JJUFRJT04yEEASHwobTUlTU0lOR19ERVNUSU5BVElPTl9VUkxfVEFH",
            "EEESIAocTUlTU0lOR19MQU5ESU5HX1BBR0VfVVJMX1RBRxBCEhUKEU1JU1NJ",
            "TkdfRElNRU5TSU9OEEMSFwoTTUlTU0lOR19ESVNQTEFZX1VSTBBEEhQKEE1J",
            "U1NJTkdfSEVBRExJTkUQRRISCg5NSVNTSU5HX0hFSUdIVBBGEhEKDU1JU1NJ",
            "TkdfSU1BR0UQRxItCilNSVNTSU5HX01BUktFVElOR19JTUFHRV9PUl9QUk9E",
            "VUNUX1ZJREVPUxBIEhwKGE1JU1NJTkdfTUFSS1VQX0xBTkdVQUdFUxBJEhoK",
            "Fk1JU1NJTkdfTU9CSUxFX0NBUlJJRVIQShIRCg1NSVNTSU5HX1BIT05FEEsS",
            "JAogTUlTU0lOR19SRVFVSVJFRF9URU1QTEFURV9GSUVMRFMQTBIgChxNSVNT",
            "SU5HX1RFTVBMQVRFX0ZJRUxEX1ZBTFVFEE0SEAoMTUlTU0lOR19URVhUEE4S",
            "FwoTTUlTU0lOR19WSVNJQkxFX1VSTBBPEhEKDU1JU1NJTkdfV0lEVEgQUBIn",
            "CiNNVUxUSVBMRV9ESVNUSU5DVF9GRUVEU19VTlNVUFBPUlRFRBBREiQKIE1V",
            "U1RfVVNFX1RFTVBfQURfVU5JT05fSURfT05fQUREEFISDAoIVE9PX0xPTkcQ",
            "UxINCglUT09fU0hPUlQQVBIiCh5VTklPTl9ESU1FTlNJT05TX0NBTk5PVF9D",
            "SEFOR0UQVRIdChlVTktOT1dOX0FERFJFU1NfQ09NUE9ORU5UEFYSFgoSVU5L",
            "Tk9XTl9GSUVMRF9OQU1FEFcSFwoTVU5LTk9XTl9VTklRVUVfTkFNRRBYEhoK",
            "FlVOU1VQUE9SVEVEX0RJTUVOU0lPTlMQWRIWChJVUkxfSU5WQUxJRF9TQ0hF",
            "TUUQWhIgChxVUkxfSU5WQUxJRF9UT1BfTEVWRUxfRE9NQUlOEFsSEQoNVVJM",
            "X01BTEZPUk1FRBBcEg8KC1VSTF9OT19IT1NUEF0SFgoSVVJMX05PVF9FUVVJ",
            "VkFMRU5UEF4SGgoWVVJMX0hPU1RfTkFNRV9UT09fTE9ORxBfEhEKDVVSTF9O",
            "T19TQ0hFTUUQYBIbChdVUkxfTk9fVE9QX0xFVkVMX0RPTUFJThBhEhgKFFVS",
            "TF9QQVRIX05PVF9BTExPV0VEEGISGAoUVVJMX1BPUlRfTk9UX0FMTE9XRUQQ",
            "YxIZChVVUkxfUVVFUllfTk9UX0FMTE9XRUQQZBIdChlVUkxfU0NIRU1FX0JF",
            "Rk9SRV9EU0FfVEFHEGUSNAowVVJMX1NDSEVNRV9CRUZPUkVfRVhQQU5ERURf",
            "RFlOQU1JQ19TRUFSQ0hfQURfVEFHEGYSKQolVVNFUl9ET0VTX05PVF9IQVZF",
            "X0FDQ0VTU19UT19URU1QTEFURRBnEiQKIElOQ09OU0lTVEVOVF9FWFBBTkRB",
            "QkxFX1NFVFRJTkdTEGgSEgoOSU5WQUxJRF9GT1JNQVQQaRIWChJJTlZBTElE",
            "X0ZJRUxEX1RFWFQQahIXChNFTEVNRU5UX05PVF9QUkVTRU5UEGsSDwoLSU1B",
            "R0VfRVJST1IQbBIWChJWQUxVRV9OT1RfSU5fUkFOR0UQbRIVChFGSUVMRF9O",
            "T1RfUFJFU0VOVBBuEhgKFEFERFJFU1NfTk9UX0NPTVBMRVRFEG8SEwoPQURE",
            "UkVTU19JTlZBTElEEHASGQoVVklERU9fUkVUUklFVkFMX0VSUk9SEHESDwoL",
            "QVVESU9fRVJST1IQchIfChtJTlZBTElEX1lPVVRVQkVfRElTUExBWV9VUkwQ",
            "cxIbChdUT09fTUFOWV9QUk9EVUNUX0lNQUdFUxB0EhsKF1RPT19NQU5ZX1BS",
            "T0RVQ1RfVklERU9TEHUSLgoqSU5DT01QQVRJQkxFX0FEX1RZUEVfQU5EX0RF",
            "VklDRV9QUkVGRVJFTkNFEHYSKgomQ0FMTFRSQUNLSU5HX05PVF9TVVBQT1JU",
            "RURfRk9SX0NPVU5UUlkQdxItCilDQVJSSUVSX1NQRUNJRklDX1NIT1JUX05V",
            "TUJFUl9OT1RfQUxMT1dFRBB4EhoKFkRJU0FMTE9XRURfTlVNQkVSX1RZUEUQ",
            "eRIqCiZQSE9ORV9OVU1CRVJfTk9UX1NVUFBPUlRFRF9GT1JfQ09VTlRSWRB6",
            "EjwKOFBIT05FX05VTUJFUl9OT1RfU1VQUE9SVEVEX1dJVEhfQ0FMTFRSQUNL",
            "SU5HX0ZPUl9DT1VOVFJZEHsSIwofUFJFTUlVTV9SQVRFX05VTUJFUl9OT1Rf",
            "QUxMT1dFRBB8EiMKH1ZBTklUWV9QSE9ORV9OVU1CRVJfTk9UX0FMTE9XRUQQ",
            "fRIjCh9JTlZBTElEX0NBTExfQ09OVkVSU0lPTl9UWVBFX0lEEH4SPQo5Q0FO",
            "Tk9UX0RJU0FCTEVfQ0FMTF9DT05WRVJTSU9OX0FORF9TRVRfQ09OVkVSU0lP",
            "Tl9UWVBFX0lEEH8SIwoeQ0FOTk9UX1NFVF9QQVRIMl9XSVRIT1VUX1BBVEgx",
            "EIABEjMKLk1JU1NJTkdfRFlOQU1JQ19TRUFSQ0hfQURTX1NFVFRJTkdfRE9N",
            "QUlOX05BTUUQgQESJwoiSU5DT01QQVRJQkxFX1dJVEhfUkVTVFJJQ1RJT05f",
            "VFlQRRCCAULnAQoiY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmVycm9y",
            "c0IMQWRFcnJvclByb3RvUAFaRGdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3Rv",
            "L2dvb2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92MC9lcnJvcnM7ZXJyb3JzogID",
            "R0FBqgIeR29vZ2xlLkFkcy5Hb29nbGVBZHMuVjAuRXJyb3JzygIeR29vZ2xl",
            "XEFkc1xHb29nbGVBZHNcVjBcRXJyb3Jz6gIiR29vZ2xlOjpBZHM6Okdvb2ds",
            "ZUFkczo6VjA6OkVycm9yc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Errors.AdErrorEnum), global::Google.Ads.GoogleAds.V0.Errors.AdErrorEnum.Parser, null, null, new[]{ typeof(global::Google.Ads.GoogleAds.V0.Errors.AdErrorEnum.Types.AdError) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Container for enum describing possible ad errors.
  /// </summary>
  public sealed partial class AdErrorEnum : pb::IMessage<AdErrorEnum> {
    private static readonly pb::MessageParser<AdErrorEnum> _parser = new pb::MessageParser<AdErrorEnum>(() => new AdErrorEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdErrorEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Errors.AdErrorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdErrorEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdErrorEnum(AdErrorEnum other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdErrorEnum Clone() {
      return new AdErrorEnum(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdErrorEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdErrorEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdErrorEnum other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AdErrorEnum message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Enum describing possible ad errors.
      /// </summary>
      public enum AdError {
        /// <summary>
        /// Enum unspecified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The received error code is not known in this version.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 1,
        /// <summary>
        /// Ad customizers are not supported for ad type.
        /// </summary>
        [pbr::OriginalName("AD_CUSTOMIZERS_NOT_SUPPORTED_FOR_AD_TYPE")] AdCustomizersNotSupportedForAdType = 2,
        /// <summary>
        /// Estimating character sizes the string is too long.
        /// </summary>
        [pbr::OriginalName("APPROXIMATELY_TOO_LONG")] ApproximatelyTooLong = 3,
        /// <summary>
        /// Estimating character sizes the string is too short.
        /// </summary>
        [pbr::OriginalName("APPROXIMATELY_TOO_SHORT")] ApproximatelyTooShort = 4,
        /// <summary>
        /// There is a problem with the snippet.
        /// </summary>
        [pbr::OriginalName("BAD_SNIPPET")] BadSnippet = 5,
        /// <summary>
        /// Cannot modify an ad.
        /// </summary>
        [pbr::OriginalName("CANNOT_MODIFY_AD")] CannotModifyAd = 6,
        /// <summary>
        /// business name and url cannot be set at the same time
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_BUSINESS_NAME_IF_URL_SET")] CannotSetBusinessNameIfUrlSet = 7,
        /// <summary>
        /// The specified field is incompatible with this ad's type or settings.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_FIELD")] CannotSetField = 8,
        /// <summary>
        /// Cannot set field when originAdId is set.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_FIELD_WITH_ORIGIN_AD_ID_SET")] CannotSetFieldWithOriginAdIdSet = 9,
        /// <summary>
        /// Cannot set field when an existing ad id is set for sharing.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_FIELD_WITH_AD_ID_SET_FOR_SHARING")] CannotSetFieldWithAdIdSetForSharing = 10,
        /// <summary>
        /// Cannot set allowFlexibleColor false if no color is provided by user.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_ALLOW_FLEXIBLE_COLOR_FALSE")] CannotSetAllowFlexibleColorFalse = 11,
        /// <summary>
        /// When user select native, no color control is allowed because we will
        /// always respect publisher color for native format serving.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_COLOR_CONTROL_WHEN_NATIVE_FORMAT_SETTING")] CannotSetColorControlWhenNativeFormatSetting = 12,
        /// <summary>
        /// Cannot specify a url for the ad type
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_URL")] CannotSetUrl = 13,
        /// <summary>
        /// Cannot specify a tracking or mobile url without also setting final urls
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_WITHOUT_FINAL_URLS")] CannotSetWithoutFinalUrls = 14,
        /// <summary>
        /// Cannot specify a legacy url and a final url simultaneously
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_WITH_FINAL_URLS")] CannotSetWithFinalUrls = 15,
        /// <summary>
        /// Cannot specify a legacy url and a tracking url template simultaneously in
        /// a DSA.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_WITH_TRACKING_URL_TEMPLATE")] CannotSetWithTrackingUrlTemplate = 16,
        /// <summary>
        /// Cannot specify a urls in UrlData and in template fields simultaneously.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_WITH_URL_DATA")] CannotSetWithUrlData = 17,
        /// <summary>
        /// This operator cannot be used with a subclass of Ad.
        /// </summary>
        [pbr::OriginalName("CANNOT_USE_AD_SUBCLASS_FOR_OPERATOR")] CannotUseAdSubclassForOperator = 18,
        /// <summary>
        /// Customer is not approved for mobile ads.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_NOT_APPROVED_MOBILEADS")] CustomerNotApprovedMobileads = 19,
        /// <summary>
        /// Customer is not approved for 3PAS richmedia ads.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_NOT_APPROVED_THIRDPARTY_ADS")] CustomerNotApprovedThirdpartyAds = 20,
        /// <summary>
        /// Customer is not approved for 3PAS redirect richmedia (Ad Exchange) ads.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_NOT_APPROVED_THIRDPARTY_REDIRECT_ADS")] CustomerNotApprovedThirdpartyRedirectAds = 21,
        /// <summary>
        /// Not an eligible customer
        /// </summary>
        [pbr::OriginalName("CUSTOMER_NOT_ELIGIBLE")] CustomerNotEligible = 22,
        /// <summary>
        /// Customer is not eligible for updating beacon url
        /// </summary>
        [pbr::OriginalName("CUSTOMER_NOT_ELIGIBLE_FOR_UPDATING_BEACON_URL")] CustomerNotEligibleForUpdatingBeaconUrl = 23,
        /// <summary>
        /// There already exists an ad with the same dimensions in the union.
        /// </summary>
        [pbr::OriginalName("DIMENSION_ALREADY_IN_UNION")] DimensionAlreadyInUnion = 24,
        /// <summary>
        /// Ad's dimension must be set before setting union dimension.
        /// </summary>
        [pbr::OriginalName("DIMENSION_MUST_BE_SET")] DimensionMustBeSet = 25,
        /// <summary>
        /// Ad's dimension must be included in the union dimensions.
        /// </summary>
        [pbr::OriginalName("DIMENSION_NOT_IN_UNION")] DimensionNotInUnion = 26,
        /// <summary>
        /// Display Url cannot be specified (applies to Ad Exchange Ads)
        /// </summary>
        [pbr::OriginalName("DISPLAY_URL_CANNOT_BE_SPECIFIED")] DisplayUrlCannotBeSpecified = 27,
        /// <summary>
        /// Telephone number contains invalid characters or invalid format. Please
        /// re-enter your number using digits (0-9), dashes (-), and parentheses
        /// only.
        /// </summary>
        [pbr::OriginalName("DOMESTIC_PHONE_NUMBER_FORMAT")] DomesticPhoneNumberFormat = 28,
        /// <summary>
        /// Emergency telephone numbers are not allowed. Please enter a valid
        /// domestic phone number to connect customers to your business.
        /// </summary>
        [pbr::OriginalName("EMERGENCY_PHONE_NUMBER")] EmergencyPhoneNumber = 29,
        /// <summary>
        /// A required field was not specified or is an empty string.
        /// </summary>
        [pbr::OriginalName("EMPTY_FIELD")] EmptyField = 30,
        /// <summary>
        /// A feed attribute referenced in an ad customizer tag is not in the ad
        /// customizer mapping for the feed.
        /// </summary>
        [pbr::OriginalName("FEED_ATTRIBUTE_MUST_HAVE_MAPPING_FOR_TYPE_ID")] FeedAttributeMustHaveMappingForTypeId = 31,
        /// <summary>
        /// The ad customizer field mapping for the feed attribute does not match the
        /// expected field type.
        /// </summary>
        [pbr::OriginalName("FEED_ATTRIBUTE_MAPPING_TYPE_MISMATCH")] FeedAttributeMappingTypeMismatch = 32,
        /// <summary>
        /// The use of ad customizer tags in the ad text is disallowed. Details in
        /// trigger.
        /// </summary>
        [pbr::OriginalName("ILLEGAL_AD_CUSTOMIZER_TAG_USE")] IllegalAdCustomizerTagUse = 33,
        /// <summary>
        /// Tags of the form {PH_x}, where x is a number, are disallowed in ad text.
        /// </summary>
        [pbr::OriginalName("ILLEGAL_TAG_USE")] IllegalTagUse = 34,
        /// <summary>
        /// The dimensions of the ad are specified or derived in multiple ways and
        /// are not consistent.
        /// </summary>
        [pbr::OriginalName("INCONSISTENT_DIMENSIONS")] InconsistentDimensions = 35,
        /// <summary>
        /// The status cannot differ among template ads of the same union.
        /// </summary>
        [pbr::OriginalName("INCONSISTENT_STATUS_IN_TEMPLATE_UNION")] InconsistentStatusInTemplateUnion = 36,
        /// <summary>
        /// The length of the string is not valid.
        /// </summary>
        [pbr::OriginalName("INCORRECT_LENGTH")] IncorrectLength = 37,
        /// <summary>
        /// The ad is ineligible for upgrade.
        /// </summary>
        [pbr::OriginalName("INELIGIBLE_FOR_UPGRADE")] IneligibleForUpgrade = 38,
        /// <summary>
        /// User cannot create mobile ad for countries targeted in specified
        /// campaign.
        /// </summary>
        [pbr::OriginalName("INVALID_AD_ADDRESS_CAMPAIGN_TARGET")] InvalidAdAddressCampaignTarget = 39,
        /// <summary>
        /// Invalid Ad type. A specific type of Ad is required.
        /// </summary>
        [pbr::OriginalName("INVALID_AD_TYPE")] InvalidAdType = 40,
        /// <summary>
        /// Headline, description or phone cannot be present when creating mobile
        /// image ad.
        /// </summary>
        [pbr::OriginalName("INVALID_ATTRIBUTES_FOR_MOBILE_IMAGE")] InvalidAttributesForMobileImage = 41,
        /// <summary>
        /// Image cannot be present when creating mobile text ad.
        /// </summary>
        [pbr::OriginalName("INVALID_ATTRIBUTES_FOR_MOBILE_TEXT")] InvalidAttributesForMobileText = 42,
        /// <summary>
        /// Invalid call to action text.
        /// </summary>
        [pbr::OriginalName("INVALID_CALL_TO_ACTION_TEXT")] InvalidCallToActionText = 43,
        /// <summary>
        /// Invalid character in URL.
        /// </summary>
        [pbr::OriginalName("INVALID_CHARACTER_FOR_URL")] InvalidCharacterForUrl = 44,
        /// <summary>
        /// Creative's country code is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_COUNTRY_CODE")] InvalidCountryCode = 45,
        /// <summary>
        /// Invalid use of Dynamic Search Ads tags ({lpurl} etc.)
        /// </summary>
        [pbr::OriginalName("INVALID_DSA_URL_TAG")] InvalidDsaUrlTag = 46,
        /// <summary>
        /// Invalid use of Expanded Dynamic Search Ads tags ({lpurl} etc.)
        /// </summary>
        [pbr::OriginalName("INVALID_EXPANDED_DYNAMIC_SEARCH_AD_TAG")] InvalidExpandedDynamicSearchAdTag = 47,
        /// <summary>
        /// An input error whose real reason was not properly mapped (should not
        /// happen).
        /// </summary>
        [pbr::OriginalName("INVALID_INPUT")] InvalidInput = 48,
        /// <summary>
        /// An invalid markup language was entered.
        /// </summary>
        [pbr::OriginalName("INVALID_MARKUP_LANGUAGE")] InvalidMarkupLanguage = 49,
        /// <summary>
        /// An invalid mobile carrier was entered.
        /// </summary>
        [pbr::OriginalName("INVALID_MOBILE_CARRIER")] InvalidMobileCarrier = 50,
        /// <summary>
        /// Specified mobile carriers target a country not targeted by the campaign.
        /// </summary>
        [pbr::OriginalName("INVALID_MOBILE_CARRIER_TARGET")] InvalidMobileCarrierTarget = 51,
        /// <summary>
        /// Wrong number of elements for given element type
        /// </summary>
        [pbr::OriginalName("INVALID_NUMBER_OF_ELEMENTS")] InvalidNumberOfElements = 52,
        /// <summary>
        /// The format of the telephone number is incorrect. Please re-enter the
        /// number using the correct format.
        /// </summary>
        [pbr::OriginalName("INVALID_PHONE_NUMBER_FORMAT")] InvalidPhoneNumberFormat = 53,
        /// <summary>
        /// The certified vendor format id is incorrect.
        /// </summary>
        [pbr::OriginalName("INVALID_RICH_MEDIA_CERTIFIED_VENDOR_FORMAT_ID")] InvalidRichMediaCertifiedVendorFormatId = 54,
        /// <summary>
        /// The template ad data contains validation errors.
        /// </summary>
        [pbr::OriginalName("INVALID_TEMPLATE_DATA")] InvalidTemplateData = 55,
        /// <summary>
        /// The template field doesn't have have the correct type.
        /// </summary>
        [pbr::OriginalName("INVALID_TEMPLATE_ELEMENT_FIELD_TYPE")] InvalidTemplateElementFieldType = 56,
        /// <summary>
        /// Invalid template id.
        /// </summary>
        [pbr::OriginalName("INVALID_TEMPLATE_ID")] InvalidTemplateId = 57,
        /// <summary>
        /// After substituting replacement strings, the line is too wide.
        /// </summary>
        [pbr::OriginalName("LINE_TOO_WIDE")] LineTooWide = 58,
        /// <summary>
        /// The feed referenced must have ad customizer mapping to be used in a
        /// customizer tag.
        /// </summary>
        [pbr::OriginalName("MISSING_AD_CUSTOMIZER_MAPPING")] MissingAdCustomizerMapping = 59,
        /// <summary>
        /// Missing address component in template element address field.
        /// </summary>
        [pbr::OriginalName("MISSING_ADDRESS_COMPONENT")] MissingAddressComponent = 60,
        /// <summary>
        /// An ad name must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_ADVERTISEMENT_NAME")] MissingAdvertisementName = 61,
        /// <summary>
        /// Business name must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_BUSINESS_NAME")] MissingBusinessName = 62,
        /// <summary>
        /// Description (line 2) must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_DESCRIPTION1")] MissingDescription1 = 63,
        /// <summary>
        /// Description (line 3) must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_DESCRIPTION2")] MissingDescription2 = 64,
        /// <summary>
        /// The destination url must contain at least one tag (e.g. {lpurl})
        /// </summary>
        [pbr::OriginalName("MISSING_DESTINATION_URL_TAG")] MissingDestinationUrlTag = 65,
        /// <summary>
        /// The tracking url template of ExpandedDynamicSearchAd must contain at
        /// least one tag. (e.g. {lpurl})
        /// </summary>
        [pbr::OriginalName("MISSING_LANDING_PAGE_URL_TAG")] MissingLandingPageUrlTag = 66,
        /// <summary>
        /// A valid dimension must be specified for this ad.
        /// </summary>
        [pbr::OriginalName("MISSING_DIMENSION")] MissingDimension = 67,
        /// <summary>
        /// A display URL must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_DISPLAY_URL")] MissingDisplayUrl = 68,
        /// <summary>
        /// Headline must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_HEADLINE")] MissingHeadline = 69,
        /// <summary>
        /// A height must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_HEIGHT")] MissingHeight = 70,
        /// <summary>
        /// An image must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_IMAGE")] MissingImage = 71,
        /// <summary>
        /// Marketing image or product videos are required.
        /// </summary>
        [pbr::OriginalName("MISSING_MARKETING_IMAGE_OR_PRODUCT_VIDEOS")] MissingMarketingImageOrProductVideos = 72,
        /// <summary>
        /// The markup language in which your site is written must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_MARKUP_LANGUAGES")] MissingMarkupLanguages = 73,
        /// <summary>
        /// A mobile carrier must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_MOBILE_CARRIER")] MissingMobileCarrier = 74,
        /// <summary>
        /// Phone number must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_PHONE")] MissingPhone = 75,
        /// <summary>
        /// Missing required template fields
        /// </summary>
        [pbr::OriginalName("MISSING_REQUIRED_TEMPLATE_FIELDS")] MissingRequiredTemplateFields = 76,
        /// <summary>
        /// Missing a required field value
        /// </summary>
        [pbr::OriginalName("MISSING_TEMPLATE_FIELD_VALUE")] MissingTemplateFieldValue = 77,
        /// <summary>
        /// The ad must have text.
        /// </summary>
        [pbr::OriginalName("MISSING_TEXT")] MissingText = 78,
        /// <summary>
        /// A visible URL must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_VISIBLE_URL")] MissingVisibleUrl = 79,
        /// <summary>
        /// A width must be entered.
        /// </summary>
        [pbr::OriginalName("MISSING_WIDTH")] MissingWidth = 80,
        /// <summary>
        /// Only 1 feed can be used as the source of ad customizer substitutions in a
        /// single ad.
        /// </summary>
        [pbr::OriginalName("MULTIPLE_DISTINCT_FEEDS_UNSUPPORTED")] MultipleDistinctFeedsUnsupported = 81,
        /// <summary>
        /// TempAdUnionId must be use when adding template ads.
        /// </summary>
        [pbr::OriginalName("MUST_USE_TEMP_AD_UNION_ID_ON_ADD")] MustUseTempAdUnionIdOnAdd = 82,
        /// <summary>
        /// The string has too many characters.
        /// </summary>
        [pbr::OriginalName("TOO_LONG")] TooLong = 83,
        /// <summary>
        /// The string has too few characters.
        /// </summary>
        [pbr::OriginalName("TOO_SHORT")] TooShort = 84,
        /// <summary>
        /// Ad union dimensions cannot change for saved ads.
        /// </summary>
        [pbr::OriginalName("UNION_DIMENSIONS_CANNOT_CHANGE")] UnionDimensionsCannotChange = 85,
        /// <summary>
        /// Address component is not {country, lat, lng}.
        /// </summary>
        [pbr::OriginalName("UNKNOWN_ADDRESS_COMPONENT")] UnknownAddressComponent = 86,
        /// <summary>
        /// Unknown unique field name
        /// </summary>
        [pbr::OriginalName("UNKNOWN_FIELD_NAME")] UnknownFieldName = 87,
        /// <summary>
        /// Unknown unique name (template element type specifier)
        /// </summary>
        [pbr::OriginalName("UNKNOWN_UNIQUE_NAME")] UnknownUniqueName = 88,
        /// <summary>
        /// Unsupported ad dimension
        /// </summary>
        [pbr::OriginalName("UNSUPPORTED_DIMENSIONS")] UnsupportedDimensions = 89,
        /// <summary>
        /// URL starts with an invalid scheme.
        /// </summary>
        [pbr::OriginalName("URL_INVALID_SCHEME")] UrlInvalidScheme = 90,
        /// <summary>
        /// URL ends with an invalid top-level domain name.
        /// </summary>
        [pbr::OriginalName("URL_INVALID_TOP_LEVEL_DOMAIN")] UrlInvalidTopLevelDomain = 91,
        /// <summary>
        /// URL contains illegal characters.
        /// </summary>
        [pbr::OriginalName("URL_MALFORMED")] UrlMalformed = 92,
        /// <summary>
        /// URL must contain a host name.
        /// </summary>
        [pbr::OriginalName("URL_NO_HOST")] UrlNoHost = 93,
        /// <summary>
        /// URL not equivalent during upgrade.
        /// </summary>
        [pbr::OriginalName("URL_NOT_EQUIVALENT")] UrlNotEquivalent = 94,
        /// <summary>
        /// URL host name too long to be stored as visible URL (applies to Ad
        /// Exchange ads)
        /// </summary>
        [pbr::OriginalName("URL_HOST_NAME_TOO_LONG")] UrlHostNameTooLong = 95,
        /// <summary>
        /// URL must start with a scheme.
        /// </summary>
        [pbr::OriginalName("URL_NO_SCHEME")] UrlNoScheme = 96,
        /// <summary>
        /// URL should end in a valid domain extension, such as .com or .net.
        /// </summary>
        [pbr::OriginalName("URL_NO_TOP_LEVEL_DOMAIN")] UrlNoTopLevelDomain = 97,
        /// <summary>
        /// URL must not end with a path.
        /// </summary>
        [pbr::OriginalName("URL_PATH_NOT_ALLOWED")] UrlPathNotAllowed = 98,
        /// <summary>
        /// URL must not specify a port.
        /// </summary>
        [pbr::OriginalName("URL_PORT_NOT_ALLOWED")] UrlPortNotAllowed = 99,
        /// <summary>
        /// URL must not contain a query.
        /// </summary>
        [pbr::OriginalName("URL_QUERY_NOT_ALLOWED")] UrlQueryNotAllowed = 100,
        /// <summary>
        /// A url scheme is not allowed in front of tag in dest url (e.g.
        /// http://{lpurl})
        /// </summary>
        [pbr::OriginalName("URL_SCHEME_BEFORE_DSA_TAG")] UrlSchemeBeforeDsaTag = 101,
        /// <summary>
        /// A url scheme is not allowed in front of tag in tracking url template
        /// (e.g. http://{lpurl})
        /// </summary>
        [pbr::OriginalName("URL_SCHEME_BEFORE_EXPANDED_DYNAMIC_SEARCH_AD_TAG")] UrlSchemeBeforeExpandedDynamicSearchAdTag = 102,
        /// <summary>
        /// The user does not have permissions to create a template ad for the given
        /// template.
        /// </summary>
        [pbr::OriginalName("USER_DOES_NOT_HAVE_ACCESS_TO_TEMPLATE")] UserDoesNotHaveAccessToTemplate = 103,
        /// <summary>
        /// Expandable setting is inconsistent/wrong. For example, an AdX ad is
        /// invalid if it has a expandable vendor format but no expanding directions
        /// specified, or expanding directions is specified, but the vendor format is
        /// not expandable.
        /// </summary>
        [pbr::OriginalName("INCONSISTENT_EXPANDABLE_SETTINGS")] InconsistentExpandableSettings = 104,
        /// <summary>
        /// Format is invalid
        /// </summary>
        [pbr::OriginalName("INVALID_FORMAT")] InvalidFormat = 105,
        /// <summary>
        /// The text of this field did not match a pattern of allowed values.
        /// </summary>
        [pbr::OriginalName("INVALID_FIELD_TEXT")] InvalidFieldText = 106,
        /// <summary>
        /// Template element is mising
        /// </summary>
        [pbr::OriginalName("ELEMENT_NOT_PRESENT")] ElementNotPresent = 107,
        /// <summary>
        /// Error occurred during image processing
        /// </summary>
        [pbr::OriginalName("IMAGE_ERROR")] ImageError = 108,
        /// <summary>
        /// The value is not within the valid range
        /// </summary>
        [pbr::OriginalName("VALUE_NOT_IN_RANGE")] ValueNotInRange = 109,
        /// <summary>
        /// Template element field is not present
        /// </summary>
        [pbr::OriginalName("FIELD_NOT_PRESENT")] FieldNotPresent = 110,
        /// <summary>
        /// Address is incomplete
        /// </summary>
        [pbr::OriginalName("ADDRESS_NOT_COMPLETE")] AddressNotComplete = 111,
        /// <summary>
        /// Invalid address
        /// </summary>
        [pbr::OriginalName("ADDRESS_INVALID")] AddressInvalid = 112,
        /// <summary>
        /// Error retrieving specified video
        /// </summary>
        [pbr::OriginalName("VIDEO_RETRIEVAL_ERROR")] VideoRetrievalError = 113,
        /// <summary>
        /// Error processing audio
        /// </summary>
        [pbr::OriginalName("AUDIO_ERROR")] AudioError = 114,
        /// <summary>
        /// Display URL is incorrect for YouTube PYV ads
        /// </summary>
        [pbr::OriginalName("INVALID_YOUTUBE_DISPLAY_URL")] InvalidYoutubeDisplayUrl = 115,
        /// <summary>
        /// Too many product Images in GmailAd
        /// </summary>
        [pbr::OriginalName("TOO_MANY_PRODUCT_IMAGES")] TooManyProductImages = 116,
        /// <summary>
        /// Too many product Videos in GmailAd
        /// </summary>
        [pbr::OriginalName("TOO_MANY_PRODUCT_VIDEOS")] TooManyProductVideos = 117,
        /// <summary>
        /// The device preference is not compatible with the ad type
        /// </summary>
        [pbr::OriginalName("INCOMPATIBLE_AD_TYPE_AND_DEVICE_PREFERENCE")] IncompatibleAdTypeAndDevicePreference = 118,
        /// <summary>
        /// Call tracking is not supported for specified country.
        /// </summary>
        [pbr::OriginalName("CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY")] CalltrackingNotSupportedForCountry = 119,
        /// <summary>
        /// Carrier specific short number is not allowed.
        /// </summary>
        [pbr::OriginalName("CARRIER_SPECIFIC_SHORT_NUMBER_NOT_ALLOWED")] CarrierSpecificShortNumberNotAllowed = 120,
        /// <summary>
        /// Specified phone number type is disallowed.
        /// </summary>
        [pbr::OriginalName("DISALLOWED_NUMBER_TYPE")] DisallowedNumberType = 121,
        /// <summary>
        /// Phone number not supported for country.
        /// </summary>
        [pbr::OriginalName("PHONE_NUMBER_NOT_SUPPORTED_FOR_COUNTRY")] PhoneNumberNotSupportedForCountry = 122,
        /// <summary>
        /// Phone number not supported with call tracking enabled for country.
        /// </summary>
        [pbr::OriginalName("PHONE_NUMBER_NOT_SUPPORTED_WITH_CALLTRACKING_FOR_COUNTRY")] PhoneNumberNotSupportedWithCalltrackingForCountry = 123,
        /// <summary>
        /// Premium rate phone number is not allowed.
        /// </summary>
        [pbr::OriginalName("PREMIUM_RATE_NUMBER_NOT_ALLOWED")] PremiumRateNumberNotAllowed = 124,
        /// <summary>
        /// Vanity phone number is not allowed.
        /// </summary>
        [pbr::OriginalName("VANITY_PHONE_NUMBER_NOT_ALLOWED")] VanityPhoneNumberNotAllowed = 125,
        /// <summary>
        /// Invalid call conversion type id.
        /// </summary>
        [pbr::OriginalName("INVALID_CALL_CONVERSION_TYPE_ID")] InvalidCallConversionTypeId = 126,
        /// <summary>
        /// Cannot disable call conversion and set conversion type id.
        /// </summary>
        [pbr::OriginalName("CANNOT_DISABLE_CALL_CONVERSION_AND_SET_CONVERSION_TYPE_ID")] CannotDisableCallConversionAndSetConversionTypeId = 127,
        /// <summary>
        /// Cannot set path2 without path1.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_PATH2_WITHOUT_PATH1")] CannotSetPath2WithoutPath1 = 128,
        /// <summary>
        /// Missing domain name in campaign setting when adding expanded dynamic
        /// search ad.
        /// </summary>
        [pbr::OriginalName("MISSING_DYNAMIC_SEARCH_ADS_SETTING_DOMAIN_NAME")] MissingDynamicSearchAdsSettingDomainName = 129,
        /// <summary>
        /// The associated ad is not compatible with restriction type.
        /// </summary>
        [pbr::OriginalName("INCOMPATIBLE_WITH_RESTRICTION_TYPE")] IncompatibleWithRestrictionType = 130,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
