// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v1/resources/click_view.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V1.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v1/resources/click_view.proto</summary>
  public static partial class ClickViewReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v1/resources/click_view.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClickViewReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvYWRzL2dvb2dsZWFkcy92MS9yZXNvdXJjZXMvY2xpY2tfdmll",
            "dy5wcm90bxIhZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEucmVzb3VyY2VzGjNn",
            "b29nbGUvYWRzL2dvb2dsZWFkcy92MS9jb21tb24vY2xpY2tfbG9jYXRpb24u",
            "cHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxocZ29vZ2xl",
            "L2FwaS9hbm5vdGF0aW9ucy5wcm90byKXAgoJQ2xpY2tWaWV3EhUKDXJlc291",
            "cmNlX25hbWUYASABKAkSKwoFZ2NsaWQYAiABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSRwoQYXJlYV9vZl9pbnRlcmVzdBgDIAEoCzItLmdv",
            "b2dsZS5hZHMuZ29vZ2xlYWRzLnYxLmNvbW1vbi5DbGlja0xvY2F0aW9uEksK",
            "FGxvY2F0aW9uX29mX3ByZXNlbmNlGAQgASgLMi0uZ29vZ2xlLmFkcy5nb29n",
            "bGVhZHMudjEuY29tbW9uLkNsaWNrTG9jYXRpb24SMAoLcGFnZV9udW1iZXIY",
            "BSABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZUL7AQolY29tLmdv",
            "b2dsZS5hZHMuZ29vZ2xlYWRzLnYxLnJlc291cmNlc0IOQ2xpY2tWaWV3UHJv",
            "dG9QAVpKZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9h",
            "ZHMvZ29vZ2xlYWRzL3YxL3Jlc291cmNlcztyZXNvdXJjZXOiAgNHQUGqAiFH",
            "b29nbGUuQWRzLkdvb2dsZUFkcy5WMS5SZXNvdXJjZXPKAiFHb29nbGVcQWRz",
            "XEdvb2dsZUFkc1xWMVxSZXNvdXJjZXPqAiVHb29nbGU6OkFkczo6R29vZ2xl",
            "QWRzOjpWMTo6UmVzb3VyY2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V1.Common.ClickLocationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Resources.ClickView), global::Google.Ads.GoogleAds.V1.Resources.ClickView.Parser, new[]{ "ResourceName", "Gclid", "AreaOfInterest", "LocationOfPresence", "PageNumber" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A click view with metrics aggregated at each click level, including both
  /// valid and invalid clicks. For non-Search campaigns, metrics.clicks
  /// represents the number of valid and invalid interactions.
  /// </summary>
  public sealed partial class ClickView : pb::IMessage<ClickView> {
    private static readonly pb::MessageParser<ClickView> _parser = new pb::MessageParser<ClickView>(() => new ClickView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClickView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Resources.ClickViewReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickView(ClickView other) : this() {
      resourceName_ = other.resourceName_;
      Gclid = other.Gclid;
      areaOfInterest_ = other.areaOfInterest_ != null ? other.areaOfInterest_.Clone() : null;
      locationOfPresence_ = other.locationOfPresence_ != null ? other.locationOfPresence_.Clone() : null;
      PageNumber = other.PageNumber;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickView Clone() {
      return new ClickView(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// The resource name of the click view.
    /// Click view resource names have the form:
    ///
    /// `customers/{customer_id}/clickViews/{date (yyyy-MM-dd)}~{gclid}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gclid" field.</summary>
    public const int GclidFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_gclid_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string gclid_;
    /// <summary>
    /// The Google Click ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gclid {
      get { return gclid_; }
      set {
        gclid_ = value;
      }
    }

    /// <summary>Field number for the "area_of_interest" field.</summary>
    public const int AreaOfInterestFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V1.Common.ClickLocation areaOfInterest_;
    /// <summary>
    /// The location criteria matching the area of interest associated with the
    /// impression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.ClickLocation AreaOfInterest {
      get { return areaOfInterest_; }
      set {
        areaOfInterest_ = value;
      }
    }

    /// <summary>Field number for the "location_of_presence" field.</summary>
    public const int LocationOfPresenceFieldNumber = 4;
    private global::Google.Ads.GoogleAds.V1.Common.ClickLocation locationOfPresence_;
    /// <summary>
    /// The location criteria matching the location of presence associated with the
    /// impression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.ClickLocation LocationOfPresence {
      get { return locationOfPresence_; }
      set {
        locationOfPresence_ = value;
      }
    }

    /// <summary>Field number for the "page_number" field.</summary>
    public const int PageNumberFieldNumber = 5;
    private static readonly pb::FieldCodec<long?> _single_pageNumber_codec = pb::FieldCodec.ForStructWrapper<long>(42);
    private long? pageNumber_;
    /// <summary>
    /// Page number in search results where the ad was shown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? PageNumber {
      get { return pageNumber_; }
      set {
        pageNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClickView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClickView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Gclid != other.Gclid) return false;
      if (!object.Equals(AreaOfInterest, other.AreaOfInterest)) return false;
      if (!object.Equals(LocationOfPresence, other.LocationOfPresence)) return false;
      if (PageNumber != other.PageNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (gclid_ != null) hash ^= Gclid.GetHashCode();
      if (areaOfInterest_ != null) hash ^= AreaOfInterest.GetHashCode();
      if (locationOfPresence_ != null) hash ^= LocationOfPresence.GetHashCode();
      if (pageNumber_ != null) hash ^= PageNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (gclid_ != null) {
        _single_gclid_codec.WriteTagAndValue(output, Gclid);
      }
      if (areaOfInterest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AreaOfInterest);
      }
      if (locationOfPresence_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocationOfPresence);
      }
      if (pageNumber_ != null) {
        _single_pageNumber_codec.WriteTagAndValue(output, PageNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (gclid_ != null) {
        size += _single_gclid_codec.CalculateSizeWithTag(Gclid);
      }
      if (areaOfInterest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AreaOfInterest);
      }
      if (locationOfPresence_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocationOfPresence);
      }
      if (pageNumber_ != null) {
        size += _single_pageNumber_codec.CalculateSizeWithTag(PageNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClickView other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.gclid_ != null) {
        if (gclid_ == null || other.Gclid != "") {
          Gclid = other.Gclid;
        }
      }
      if (other.areaOfInterest_ != null) {
        if (areaOfInterest_ == null) {
          areaOfInterest_ = new global::Google.Ads.GoogleAds.V1.Common.ClickLocation();
        }
        AreaOfInterest.MergeFrom(other.AreaOfInterest);
      }
      if (other.locationOfPresence_ != null) {
        if (locationOfPresence_ == null) {
          locationOfPresence_ = new global::Google.Ads.GoogleAds.V1.Common.ClickLocation();
        }
        LocationOfPresence.MergeFrom(other.LocationOfPresence);
      }
      if (other.pageNumber_ != null) {
        if (pageNumber_ == null || other.PageNumber != 0L) {
          PageNumber = other.PageNumber;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_gclid_codec.Read(input);
            if (gclid_ == null || value != "") {
              Gclid = value;
            }
            break;
          }
          case 26: {
            if (areaOfInterest_ == null) {
              areaOfInterest_ = new global::Google.Ads.GoogleAds.V1.Common.ClickLocation();
            }
            input.ReadMessage(areaOfInterest_);
            break;
          }
          case 34: {
            if (locationOfPresence_ == null) {
              locationOfPresence_ = new global::Google.Ads.GoogleAds.V1.Common.ClickLocation();
            }
            input.ReadMessage(locationOfPresence_);
            break;
          }
          case 42: {
            long? value = _single_pageNumber_codec.Read(input);
            if (pageNumber_ == null || value != 0L) {
              PageNumber = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
